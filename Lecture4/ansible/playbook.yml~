---

- name: Run docker container
  hosts: all
  become: true

  vars:
    create_containers: 3
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: sleep 1d
  
  tasks:
    - name: Run the equivalent of "apt-get update" as a separate step
      apt:
        update_cache: yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python-pip', 'python3-pip', 'virtualenv', 'python-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker
#        executable: pip
        
    - name: Pull default Docker image
      docker_image:
        name: "{{ default_container_image }}"
        source: pull

    - name: Create default containers
      docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        command: "{{ default_container_command }}"
        volumes: 
          - /home/vagrant/workdir/ansible/docker:/volume
        restart: yes
        state: started        
      with_sequence: count={{ create_containers }}

      
      
    - name: Execute command inside a container
      shell: "docker exec {{ default_container_name }}{{ item }} /volume/indocker.sh"
      with_sequence: count={{ create_containers }}

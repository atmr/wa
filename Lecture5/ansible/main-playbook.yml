---
################################################################################
- name: Create users and generate ssh key in acc host
  hosts: ACC
  become: yes

  roles:
  - singleplatform-eng.users

  tasks:
  - name: Ping hosts
    ping:

################################################################################
- name: create users and copy ssh key in vm[2-3] hosts
  hosts: VM
  become: yes

  tasks:
  - name: Ping hosts
    ping:

  roles:
    - singleplatform-eng.users

################################################################################
- name: Create users and generate ssh key in acc host
  hosts: all
  become: yes

  vars:
    users:
      - lab
      - labsudo

  tasks:
  - name: fetch local ssh key from lab user
    shell: cat /home/{{ item }}/.ssh/id_rsa.pub
    register: ssh_keys
    changed_when: false
    run_once: true
    delegate_to: vm1
    with_items: "{{ users }}"

  - name: Set authorized key took from file
    authorized_key:
      user: "{{ item.item }}"
      state: present
      key:  "{{ item.stdout }}"
    with_items: "{{ ssh_keys.results }}"

  - name: Validate the sudoers file before saving
    lineinfile:
      path: /etc/sudoers.d/labsudo
      line: 'labsudo ALL=(ALL) NOPASSWD: ALL'
      create: yes
      validate: /usr/sbin/visudo -cf %s
      owner: root
      group: root
      mode: '0440'

################################################################################
# all hosts install and configure ntp via role
- name: ntpd and logrotate
  hosts: all
  become: yes

  vars:
    logrotate_scripts:
    - name: apache2
      path: /var/log/apache2/*.log
      options:
        - daily
        - weekly
        - rotate 14
        - missingok
        - compress
        - delaycompress
        - notifempty
        - create 640 root adm
        - sharedscripts
      scripts:
        postrotate: "if invoke-rc.d apache2 status > /dev/null 2>&1; then invoke-rc.d apache2 reload > /dev/null 2>&1; fi;"
        prerotate: "if [ -d /etc/logrotate.d/httpd-prerotate ]; then run-parts /etc/logrotate.d/httpd-prerotate; fi;"

    - name: syslog
      path: /var/log/syslog
      options:
        - rotate 7
        - daily
        - missingok
        - notifempty
        - delaycompress
        - compress
      scripts:
        postrotate: "/usr/lib/rsyslog/rsyslog-rotate"

  roles:
    - geerlingguy.git
    - nickhammond.logrotate
    - role: geerlingguy.ntp
      vars:
        ntp_timezone: Europe/Kiev
        ntp_manage_config: true
        ntp_servers:
          - "192.168.88.1 iburst"

  tasks:
    - include_tasks: docker.yml

################################################################################
- name: frontend
  hosts: FRONTEND
  become: yes

  tasks:
  - name: Install required system packages
    apt: name={{ item }} state=latest update_cache=yes
    loop: [ 'apache2', 'php-fpm']

################################################################################
- name: backend
  hosts: BACKEND
  become: yes

  tasks:
  - name: ping
    ping:

  roles:

  - role: geerlingguy.java
    when: ansible_os_family == 'Debian'
    java_packages:
       - openjdk-8-jdk

  - role: geerlingguy.apache
    vars:
      apache_create_vhosts: no
      apache_mods_enabled:
        - proxy.load
        - proxy_http.load
        - headers.load
        - rewrite.load
        - ssl.load
      apache_remove_default_vhost: true

  - role: ansible-thoteam.nexus3-oss
    vars:
      nexus_default_admin_password: 'admin123'
      nexus_admin_password: 'admin1234'
      nexus_anonymous_access: false
      nexus_anonymous_access: true
      nexus_public_hostname: 'nexus.example.com'
      nexus_public_scheme: https
      nexus_email_from_address: "nexus@nexus.example.com"
      httpd_setup_enable: true
      httpd_default_admin_email: "admin@example.com"
#      httpd_ssl_certificate_file: 'files/nexus.example.com.crt'
#      httpd_ssl_certificate_key_file: 'files/nexus.example.com.key'
#      httpd_ssl_certificate_chain_file: "{{ httpd_ssl_certificate_file }}"
      httpd_copy_ssl_files: false
      httpd_ssl_cert_file_location: "/vagrant/certs/nexus.example.com.crt"
      httpd_ssl_cert_key_location: "/vagrant/certs/nexus.example.com.key"
      httpd_ssl_cert_chain_file_location: "{{ httpd_ssl_cert_file_location }}"
      nexus_config_pypi: false
      nexus_config_docker: true
      nexus_config_raw: false
      nexus_config_rubygems: false
      nexus_config_bower: false
      nexus_config_npm: false
      nexus_config_nuget: false
      nexus_config_gitlfs: false
      nexus_config_yum: false
      nexus_config_apt: false
      nexus_local_users:
        - username: jenkins # used as key to update
          first_name: Jenkins
          last_name: CI
          email: support@example.com
          password: "s3cr3t"
          roles:
            - developers # role ID here
      nexus_delete_default_repos: true
      nexus_delete_default_blobstore: false
      nexus_blob_split: true     # True - blobstores per format
      nexus_blob_names:           # Splited blob name list @ blob_vars.yml
        docker:
          blob: 'default'
      nexus_privileges:
        - name: all-repos-read # used as key to update a privilege
        # type: <one of application, repository-admin, repository-content-selector, repository-view, script or wildcard>
          description: 'Read & Browse access to all repos'
          repository: '*'
          actions: # can be add, browse, create, delete, edit, read or  * (all)
            - read
            - browse
        # pattern: pattern
        # domain: domain
        # script_name: name
      _nexus_privilege_defaults:
        type: repository-view
        format: docker
        actions:
          - read
